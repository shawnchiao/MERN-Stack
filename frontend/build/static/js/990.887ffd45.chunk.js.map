{"version":3,"file":"static/js/990.887ffd45.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\n\n\nconst UpdatePlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState();\n  const { error, clearError, sendRequest, isLoading } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const navigate =useNavigate();\n  const placeId = useParams().placeId;\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const thePlace = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`)\n        setLoadedPlace(thePlace.place);\n        setFormData(\n          {\n            title: {\n              value: thePlace.place.title,\n              isValid: true\n            },\n            description: {\n              value: thePlace.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch { };\n    };\n    fetchPlace();\n\n  }, [setFormData, sendRequest, placeId]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      navigate('/')\n    } catch{};\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner asOverlay />\n      </div>\n    );\n  }\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n \n  return (\n    <>\n       <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["useState","loadedPlace","setLoadedPlace","useHttpClient","error","clearError","sendRequest","isLoading","auth","useContext","AuthContext","navigate","useNavigate","placeId","useParams","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","fetchPlace","process","thePlace","place","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","className","asOverlay","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","children","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}