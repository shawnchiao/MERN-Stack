{"version":3,"file":"static/js/222.3b03023e.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/randomDefaultColor.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid:false\n      }\n    },\n    false\n  );\n\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value );  \n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        'POST',\n        formData,\n        {Authorization: 'Bearer ' + auth.token}\n      );\n      navigate('/');\n    } catch (err) { };\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload \n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","const defaultColor = [\n  `AliceBlue`,\n  `AntiqueWhite`,\n  `Aqua`,\n  `Aquamarine`,\n  `Azure`,\n  `Beige`,\n  `Bisque`,\n  `Black`,\n  `BlanchedAlmond`,\n  `Blue`,\n  `BlueViolet`,\n  `Brown`,\n  `BurlyWood`,\n  `CadetBlue`,\n  `Chartreuse`,\n  `Chocolate`,\n  `Coral`,\n  `CornflowerBlue`,\n  `Cornsilk`,\n  `Crimson`,\n  `Cyan`,\n  `DarkBlue`,\n  `DarkCyan`,\n  `DarkGoldenRod`,\n  `DarkGray`,\n  `DarkGrey`,\n  `DarkGreen`,\n  `DarkKhaki`,\n  `DarkMagenta`,\n  `DarkOliveGreen`,\n  `Darkorange`,\n  `DarkOrchid`,\n  `DarkRed`,\n  `DarkSalmon`,\n  `DarkSeaGreen`,\n  `DarkSlateBlue`,\n  `DarkSlateGray`,\n  `DarkSlateGrey`,\n  `DarkTurquoise`,\n  `DarkViolet`,\n  `DeepPink`,\n  `DeepSkyBlue`,\n  `DimGray`,\n  `DimGrey`,\n  `DodgerBlue`,\n  `FireBrick`,\n  `FloralWhite`,\n  `ForestGreen`,\n  `Fuchsia`,\n  `Gainsboro`,\n  `GhostWhite`,\n  `Gold`,\n  `GoldenRod`,\n  `Gray`,\n  `Grey`,\n  `Green`,\n  `GreenYellow`,\n  `HoneyDew`,\n  `HotPink`,\n  `IndianRed`,\n  `Indigo`,\n  `Ivory`,\n  `Khaki`,\n  `Lavender`,\n  `LavenderBlush`,\n  `LawnGreen`,\n  `LemonChiffon`,\n  `LightBlue`,\n  `LightCoral`,\n  `LightCyan`,\n  `LightGoldenRodYellow`,\n  `LightGray`,\n  `LightGrey`,\n  `LightGreen`,\n  `LightPink`,\n  `LightSalmon`,\n  `LightSeaGreen`,\n  `LightSkyBlue`,\n  `LightSlateGray`,\n  `LightSlateGrey`,\n  `LightSteelBlue`,\n  `LightYellow`,\n  `Lime`,\n  `LimeGreen`,\n  `Linen`,\n  `Magenta`,\n  `Maroon`,\n  `MediumAquaMarine`,\n  `MediumBlue`,\n  `MediumOrchid`,\n  `MediumPurple`,\n  `MediumSeaGreen`,\n  `MediumSlateBlue`,\n  `MediumSpringGreen`,\n  `MediumTurquoise`,\n  `MediumVioletRed`,\n  `MidnightBlue`,\n  `MintCream`,\n  `MistyRose`,\n  `Moccasin`,\n  `NavajoWhite`,\n  `Navy`,\n  `OldLace`,\n  `Olive`,\n  `OliveDrab`,\n  `Orange`,\n  `OrangeRed`,\n  `Orchid`,\n  `PaleGoldenRod`,\n  `PaleGreen`,\n  `PaleTurquoise`,\n  `PaleVioletRed`,\n  `PapayaWhip`,\n  `PeachPuff`,\n  `Peru`,\n  `Pink`,\n  `Plum`,\n  `PowderBlue`,\n  `Purple`,\n  `Red`,\n  `RosyBrown`,\n  `RoyalBlue`,\n  `SaddleBrown`,\n  `Salmon`,\n  `SandyBrown`,\n  `SeaGreen`,\n  `SeaShell`,\n  `Sienna`,\n  `Silver`,\n  `SkyBlue`,\n  `SlateBlue`,\n  `SlateGray`,\n  `SlateGrey`,\n  `Snow`,\n  `SpringGreen`,\n  `SteelBlue`,\n  `Tan`,\n  `Teal`,\n  `Thistle`,\n  `Tomato`,\n  `Turquoise`,\n  `Violet`,\n  `Wheat`,\n  `White`,\n  `WhiteSmoke`,\n  `Yellow`,\n  `YellowGreen`,\n];\n\n\nexport const randomDefaultColor = () => {\n  const randomNumber = Math.floor(Math.random()*146)\n  return defaultColor[randomNumber]\n};\n\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Button from './Button';\nimport {randomDefaultColor} from './randomDefaultColor';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const filePickerRef = useRef();\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n\n  useEffect(() => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend= ()=> {\n        setPreviewUrl(reader.result);\n      } ;\n      reader.readAsDataURL(file);     \n    }\n  },[file])\n\n  const random = () => {\n    const randomNumber = Math.round(1000*Math.random());\n    const url = `https://avatars.dicebear.com/api/avataaars/:seed${randomNumber}.svg?background=${randomDefaultColor()}`\n    setPreviewUrl(url);\n    const randomPhoto = url\n    props.onInput(props.id, randomPhoto, true)\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const pickedHandler = (event) => {\n\n    let fileIsValid = isValid;\n    let pickedFile;\n    if (event.target.files && event.target.files.length === 1) {\n      setFile(event.target.files[0]);\n      pickedFile = event.target.files[0]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n     fileIsValid = true;\n     setIsValid(false);\n    }\n    props.onInput(props.id, pickedFile, fileIsValid )\n  }\n\n\n  return (\n    <div className='form-control'>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        type='file'\n        style={{ display: 'none' }}\n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className={`image-upload__preview ${props.circle && \"circle\"}`}>\n         {previewUrl && <img src={previewUrl} alt=\"Preview\" className={ props.circle && 'circle'} /> }      \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n        {props.randomButton && <Button inverse  type=\"button\" onClick={random}>RANDOM</Button>}\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","navigate","useNavigate","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","process","Authorization","token","onClear","asOverlay","className","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","defaultColor","props","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","useEffect","reader","FileReader","onloadend","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","circle","src","alt","Button","onClick","current","click","randomButton","inverse","randomNumber","Math","round","random","url","floor","randomDefaultColor","randomPhoto","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}