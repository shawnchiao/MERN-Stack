{"version":3,"file":"static/js/503.b65f58fb.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\n\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst PlaceItem = props => {\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const { error, clearError, sendRequest, isLoading } = useHttpClient();\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const auth = useContext(AuthContext);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n     await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n      'DELETE',\n      null,\n      {Authorization: 'Bearer ' + auth.token}\n      )\n    } catch(err) {\n      throw error;\n    };\n    props.onDelete(props.id);\n  }\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {/* map */}\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      \n    {/* Delete */}\n      { isLoading && <LoadingSpinner asOverlay />}\n      <Modal \n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\" \n        footerClass=\"place-item__modal-actions\" \n        footer={\n        <>\n          <Button inverse onClick={cancelDeleteHandler}> CANCEL</Button>\n          <Button danger onClick={confirmDeleteHandler}> DELETE</Button>\n        </>\n      }>\n        <p>\n          Do you want to proceed and delete this place? Please note that it can't be undone thereafter.\n        </p>\n      </Modal>\n\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          <div className=\"place-item__image\">\n            <img src={props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n          <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}       \n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  \n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst UserPlaces = () => {\n  const {error, clearError, sendRequest, isLoading} = useHttpClient();\n  const [places, setPlaces] = useState([]);\n  const userId = useParams().userId;\n\n  const placeDeleteHandler = (deletedPlaceId) => {\n    setPlaces(prevPlaces => \n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n      );\n  };\n\n  useEffect(()=>{\n    const getData = async () => {\n      const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\n      setPlaces(response.places);\n    };\n    getData();\n  },[sendRequest, userId])\n  return (\n  <>\n  <ErrorModal error={error} onClear={clearError} />\n  {isLoading && <LoadingSpinner asOverlay />}\n  <PlaceList items={places} onDeletePlace={placeDeleteHandler} />;\n  </>\n  )\n};\n\nexport default UserPlaces;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","ref","className","style","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","error","clearError","sendRequest","isLoading","closeMapHandler","auth","useContext","AuthContext","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","LoadingSpinner","asOverlay","inverse","danger","Card","src","image","alt","title","description","userId","creatorId","to","items","length","place","creator","location","onDeletePlace","places","setPlaces","useParams","getData","response","deletedPlaceId","prevPlaces","filter","children"],"sourceRoot":""}