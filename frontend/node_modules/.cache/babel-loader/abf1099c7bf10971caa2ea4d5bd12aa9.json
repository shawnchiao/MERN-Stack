{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  const test = () => {\n    console.log('k');\n  };\n\n  function timeout() {\n    return new Promise(() => setTimeout(test, 2000));\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      setIsLoading(true);\n\n      try {\n        await timeout();\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        ;\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err);\n      }\n\n      ;\n      setIsLoading(false);\n    };\n\n    getData();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"s1eV5U7uXFGXvXqsUGrpK/pWnBU=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UsersList","LoadingSpinner","ErrorModal","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","test","console","log","timeout","Promise","setTimeout","getData","response","fetch","responseData","json","ok","Error","message","users","err","errorHandler"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst Users = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    const test = () => {\n        console.log('k')\n    }\n\n    function timeout() {\n        return new Promise(() => setTimeout(test, 2000));\n    }\n\n    useEffect(() => {\n        const getData = async () => {\n            \n            setIsLoading(true);\n            try {\n                await timeout();\n                const response = await fetch('http://localhost:5000/api/users');\n                const responseData = await response.json();\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                };\n                setLoadedUsers(responseData.users);\n            } catch (err) {\n                setError(err);\n            };\n            setIsLoading(false);\n        };\n        getData();\n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && <LoadingSpinner asOverlay />}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </>\n    )\n}\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;;EAEA,MAAMW,IAAI,GAAG,MAAM;IACfC,OAAO,CAACC,GAAR,CAAY,GAAZ;EACH,CAFD;;EAIA,SAASC,OAAT,GAAmB;IACf,OAAO,IAAIC,OAAJ,CAAY,MAAMC,UAAU,CAACL,IAAD,EAAO,IAAP,CAA5B,CAAP;EACH;;EAEDZ,SAAS,CAAC,MAAM;IACZ,MAAMkB,OAAO,GAAG,YAAY;MAExBX,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMQ,OAAO,EAAb;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QACA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACH;;QAAA;QACDd,cAAc,CAACU,YAAY,CAACK,KAAd,CAAd;MACH,CARD,CAQE,OAAOC,GAAP,EAAY;QACVlB,QAAQ,CAACkB,GAAD,CAAR;MACH;;MAAA;MACDpB,YAAY,CAAC,KAAD,CAAZ;IACH,CAfD;;IAgBAW,OAAO;EACV,CAlBQ,EAkBN,EAlBM,CAAT;;EAoBA,MAAMU,YAAY,GAAG,MAAM;IACvBnB,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAED,KAAnB;MAA0B,OAAO,EAAEoB;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKtB,SAAS,iBAAI,QAAC,cAAD;MAAgB,SAAS;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFlB,EAGK,CAACA,SAAD,IAAcI,WAAd,iBAA6B,QAAC,SAAD;MAAW,KAAK,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAHlC;EAAA,gBADJ;AAOH,CA5CD;;GAAML,K;;KAAAA,K;AA8CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}