{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport LoadingSprinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        ;\n        setLoadedUsers(data);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err);\n      }\n\n      ;\n    };\n\n    getData();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSprinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"s1eV5U7uXFGXvXqsUGrpK/pWnBU=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UsersList","LoadingSprinner","ErrorModal","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","getData","response","fetch","responseData","json","ok","Error","message","data","err","errorHandler"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport LoadingSprinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst Users = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch('http://localhost:5000/api/users');\n                const responseData = await response.json();\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                };\n                setLoadedUsers(data);\n                setIsLoading(false);\n            } catch (err) {\n                setError(err);\n            };\n        };\n        getData();\n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n    return (\n        <>\n            {isLoading && <LoadingSprinner asOverlay />}\n            <ErrorModal error={error} onClear={errorHandler} />\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n\n        </>\n    )\n}\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMY,OAAO,GAAG,YAAY;MACxB,IAAI;QACAL,YAAY,CAAC,IAAD,CAAZ;QACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QACA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACH;;QAAA;QACDR,cAAc,CAACS,IAAD,CAAd;QACAb,YAAY,CAAC,KAAD,CAAZ;MACH,CATD,CASE,OAAOc,GAAP,EAAY;QACVZ,QAAQ,CAACY,GAAD,CAAR;MACH;;MAAA;IACJ,CAbD;;IAcAT,OAAO;EACV,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,MAAMU,YAAY,GAAG,MAAM;IACvBb,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA,WACKH,SAAS,iBAAI,QAAC,eAAD;MAAiB,SAAS;IAA1B;MAAA;MAAA;MAAA;IAAA,QADlB,eAEI,QAAC,UAAD;MAAY,KAAK,EAAEE,KAAnB;MAA0B,OAAO,EAAEc;IAAnC;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGK,CAAChB,SAAD,IAAcI,WAAd,iBAA6B,QAAC,SAAD;MAAW,KAAK,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAHlC;EAAA,gBADJ;AAQH,CAnCD;;GAAML,K;;KAAAA,K;AAqCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}