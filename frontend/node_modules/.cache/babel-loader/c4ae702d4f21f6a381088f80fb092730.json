{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        ;\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err);\n      }\n\n      ;\n      setIsLoading(false);\n    };\n\n    setTimeout(getData(), 100000);\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"s1eV5U7uXFGXvXqsUGrpK/pWnBU=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UsersList","LoadingSpinner","ErrorModal","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","getData","response","fetch","responseData","json","ok","Error","message","users","err","setTimeout","errorHandler"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst Users = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    useEffect(() => {\n     \n        const getData = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch('http://localhost:5000/api/users');\n                const responseData = await response.json();\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                };\n                setLoadedUsers(responseData.users);\n            } catch (err) {\n                setError(err);\n            };\n            setIsLoading(false);\n        };\n        setTimeout(  getData(), 100000)\n      \n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && <LoadingSpinner asOverlay />}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </>\n    )\n}\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IAEZ,MAAMY,OAAO,GAAG,YAAY;MACxBL,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QACA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACH;;QAAA;QACDR,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;MACH,CAPD,CAOE,OAAOC,GAAP,EAAY;QACVZ,QAAQ,CAACY,GAAD,CAAR;MACH;;MAAA;MACDd,YAAY,CAAC,KAAD,CAAZ;IACH,CAbD;;IAcAe,UAAU,CAAGV,OAAO,EAAV,EAAc,MAAd,CAAV;EAEH,CAlBQ,EAkBN,EAlBM,CAAT;;EAoBA,MAAMW,YAAY,GAAG,MAAM;IACvBd,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAED,KAAnB;MAA0B,OAAO,EAAEe;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKjB,SAAS,iBAAI,QAAC,cAAD;MAAgB,SAAS;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFlB,EAGK,CAACA,SAAD,IAAcI,WAAd,iBAA6B,QAAC,SAAD;MAAW,KAAK,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAHlC;EAAA,gBADJ;AAOH,CApCD;;GAAML,K;;KAAAA,K;AAsCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}