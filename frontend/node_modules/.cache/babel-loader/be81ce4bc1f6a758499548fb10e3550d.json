{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoding] = useState(false);\n  const [error, setError] = useState(false);\n  const auth = useContext(AuthContext);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoding(true);\n\n    if (isLoginMode) {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        ;\n        console.log(responseData);\n        setIsLoding(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoding(false);\n        setError(err.message || 'Something went wrong, please try again.');\n      }\n\n      ;\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        ;\n        console.log(responseData);\n        setIsLoding(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoding(false);\n        setError(err.message || 'Something went wrong, please try again.');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      delete formState.inputs.name;\n      setFormData({ ...formState.inputs\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prev => !prev);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a valid name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submmit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          inverse: true,\n          type: \"button\",\n          onClick: switchModeHandler,\n          children: isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Auth, \"rJYm4OGOrokb5aO5kkQRtZG57H4=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","ErrorModal","LoadingSpinner","Auth","formState","inputHandler","setFormData","email","value","isValid","password","isLoginMode","setIsLoginMode","isLoading","setIsLoding","error","setError","auth","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputs","responseData","json","ok","Error","message","console","log","login","err","name","switchModeHandler","prev","errorHandler"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './Auth.css';\n\n\nconst Auth = () => {\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: { value: '', isValid: false },\n      password: { value: '', isValid: false }\n    },\n    false\n  );\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoding] = useState(false);\n  const [error, setError] = useState(false);\n\n  const auth = useContext(AuthContext);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoding(true);\n    if (isLoginMode) {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        };\n        console.log(responseData);\n        setIsLoding(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoding(false);\n        setError(err.message || 'Something went wrong, please try again.');\n      };\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        };\n        console.log(responseData);\n        setIsLoding(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoding(false);\n        setError(err.message || 'Something went wrong, please try again.');\n      };\n    };\n\n\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      delete formState.inputs.name;\n      setFormData({ ...formState.inputs }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs, name: { value: '', isValid: false } }, false);\n    }\n    setIsLoginMode((prev) => !prev);\n  };\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <header>\n          <h2>Login Required</h2>\n          <hr />\n        </header>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid name.\"\n            onInput={inputHandler}\n          />}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n\n          <Button type='submmit' disabled={!formState.isValid} >\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n\n\n          <Button inverse type=\"button\" onClick={switchModeHandler} >\n            {isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN'}\n          </Button>\n\n        </form>\n      </Card>\n    </>\n  )\n\n};\n\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}