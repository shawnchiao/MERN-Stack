{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoding] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const auth = useContext(AuthContext);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        return console.log(err);\n      }\n\n      ;\n    }\n\n    ;\n    auth.login();\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      delete formState.inputs.name;\n      setFormData({ ...formState.inputs\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"authentication\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmitHandler,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"name\",\n        type: \"text\",\n        label: \"Your Name\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid name.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submmit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        type: \"button\",\n        onClick: switchModeHandler,\n        children: isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"54a/gXD4jLFed2vtnI2hk8gTFTA=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","LoadingSpinner","Auth","formState","inputHandler","setFormData","email","value","isValid","password","isLoginMode","setIsLoginMode","isLoading","setIsLoding","isError","setIsError","auth","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","inputs","responseData","json","console","log","err","login","switchModeHandler","prev"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './Auth.css';\n\n\nconst Auth = () => {\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: { value: '', isValid: false },\n      password: { value: '', isValid: false }\n    },\n    false\n  );\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoding] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const auth = useContext(AuthContext);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        return console.log(err);\n      };\n    };\n\n    auth.login();\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      delete formState.inputs.name;\n      setFormData({ ...formState.inputs }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs, name: { value: '', isValid: false } }, false);\n    }\n    setIsLoginMode((prev) => !prev);\n  };\n\n  return (\n\n    <Card className=\"authentication\">\n      {isLoading && <LoadingSpinner />}\n      <header>\n        <h2>Login Required</h2>\n        <hr />\n      </header>\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && <Input\n          element=\"input\"\n          id=\"name\"\n          type=\"text\"\n          label=\"Your Name\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid name.\"\n          onInput={inputHandler}\n        />}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n\n        <Button type='submmit' disabled={!formState.isValid} >\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </Button>\n\n\n        <Button inverse type=\"button\" onClick={switchModeHandler} >\n          {isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN'}\n        </Button>\n\n      </form>\n    </Card>\n  )\n\n};\n\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}