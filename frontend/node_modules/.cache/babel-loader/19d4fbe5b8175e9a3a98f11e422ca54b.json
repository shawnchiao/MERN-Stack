{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdatePlace = () => {\n  _s();\n\n  const [loadedPlace, setLoadedPlace] = useState({});\n  const {\n    error,\n    clearError,\n    sendRequest,\n    isLoading\n  } = useHttpClient();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const thePlace = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(thePlace.place);\n        setFormData({\n          title: {\n            value: thePlace.place.title,\n            isValid: true\n          },\n          description: {\n            value: thePlace.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch {}\n\n      ;\n    };\n\n    fetchPlace();\n  }, [setFormData, sendRequest, placeId]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(loadedPlace);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && loadedPlace && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeUpdateSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid title.\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.title,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid description (min. 5 characters).\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.description,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"UPDATE PLACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdatePlace, \"VacvE73TxLySxWLE47cWhDpH+oQ=\", false, function () {\n  return [useHttpClient, useParams, useForm];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Input","Button","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","LoadingSpinner","UpdatePlace","loadedPlace","setLoadedPlace","error","clearError","sendRequest","isLoading","placeId","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","thePlace","place","placeUpdateSubmitHandler","event","preventDefault","console","log"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\n\nconst UpdatePlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState({});\n  const { error, clearError, sendRequest, isLoading } = useHttpClient();\n  const placeId = useParams().placeId;\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const thePlace = await sendRequest(`http://localhost:5000/api/places/${placeId}`)\n        setLoadedPlace(thePlace.place);\n        setFormData(\n          {\n            title: {\n              value: thePlace.place.title,\n              isValid: true\n            },\n            description: {\n              value: thePlace.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch { };\n    };\n    fetchPlace();\n\n  }, [setFormData, sendRequest, placeId]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner asOverlay />\n      </div>\n    );\n  }\n  console.log(loadedPlace);\n  return (\n    <>\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}