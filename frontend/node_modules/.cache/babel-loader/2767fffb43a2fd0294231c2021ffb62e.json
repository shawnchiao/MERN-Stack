{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UserPlaces.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserPlaces = async () => {\n  _s();\n\n  const {\n    error,\n    clearError,\n    sendRequest,\n    isLoading\n  } = useHttpClient();\n  const {\n    places,\n    setPlaces\n  } = useState(null);\n  const userId = useParams().userId;\n  console.log(userId);\n\n  try {\n    const response = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n    setPlaces(response.places);\n    console.log(places);\n  } catch {}\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onCancel: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaceList, {\n      items: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n\n_s(UserPlaces, \"wj+CiHuIOiZFnmMwAYUF+w30yQw=\", false, function () {\n  return [useHttpClient, useParams];\n});\n\n_c = UserPlaces;\nexport default UserPlaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"names":["React","useState","useParams","PlaceList","useHttpClient","AuthContext","LoadingSpinner","ErrorModal","UserPlaces","error","clearError","sendRequest","isLoading","places","setPlaces","userId","console","log","response"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\n\n\nconst UserPlaces = async () => {\n  const { error, clearError, sendRequest, isLoading } = useHttpClient();\n  const { places, setPlaces } = useState(null);\n  const userId = useParams().userId;\n  console.log(userId)\n  try {\n    const response = await sendRequest(`http://localhost:5000/api/places/user/${userId}`)\n    setPlaces(response.places);\n    console.log(places)\n  } catch { };\n\n  return (\n    <>\n      <ErrorModal error={error} onCancel={clearError} />\n      <PlaceList items={places} />;\n    </>\n  )\n};\n\nexport default UserPlaces;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAIA,MAAMC,UAAU,GAAG,YAAY;EAAA;;EAC7B,MAAM;IAAEC,KAAF;IAASC,UAAT;IAAqBC,WAArB;IAAkCC;EAAlC,IAAgDR,aAAa,EAAnE;EACA,MAAM;IAAES,MAAF;IAAUC;EAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAMc,MAAM,GAAGb,SAAS,GAAGa,MAA3B;EACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ;;EACA,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMP,WAAW,CAAE,yCAAwCI,MAAO,EAAjD,CAAlC;IACAD,SAAS,CAACI,QAAQ,CAACL,MAAV,CAAT;IACAG,OAAO,CAACC,GAAR,CAAYJ,MAAZ;EACD,CAJD,CAIE,MAAM,CAAG;;EAAA;EAEX,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,KAAK,EAAEJ,KAAnB;MAA0B,QAAQ,EAAEC;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,KAAK,EAAEG;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CAjBD;;GAAML,U;UACkDJ,a,EAEvCF,S;;;KAHXM,U;AAmBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}