{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from '../../shared/util/validators';\nimport './NewPlace.css'; // const formReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'INPUT_CHANGE':\n//       let formIsValid = true;\n//       for (const inputId in state.inputs) {\n//         if (inputId === action.inputId) {\n//           formIsValid = formIsValid && action.isValid;\n//         } else {\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\n//         }\n//       }\n//       return {\n//         ...state,\n//         inputs: {\n//           ...state.inputs,\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\n//         },\n//         isValid: formIsValid\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPlace = () => {\n  // const [formState, dispatch] = useReducer(formReducer, {\n  //   inputs: {\n  //     title: {\n  //       value: '',\n  //       isValid: false\n  //     },\n  //     description: {\n  //       value: '',\n  //       isValid: false\n  //     }\n  //   },\n  //   isValid: false\n  // });\n  // const inputHandler = useCallback((id, value, isValid) => {\n  //   dispatch({\n  //     type: 'INPUT_CHANGE',\n  //     value: value,\n  //     isValid: isValid,\n  //     inputId: id\n  //   });\n  // }, []);\n  // const placeSubmitHandler = event => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\"\n    /*onSubmit={placeSubmitHandler}*/\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\" // onInput={inputHandler}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\" // onInput={inputHandler}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_EMAIL()],\n      errorText: \"Please enter a valid address.\" // onInput={inputHandler}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\"\n      /*disabled={!formState.isValid}*/\n      ,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","NewPlace"],"sources":["/Users/shawn/Desktop/Web development/reactNew/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_EMAIL\n} from '../../shared/util/validators';\nimport './NewPlace.css';\n\n// const formReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'INPUT_CHANGE':\n//       let formIsValid = true;\n//       for (const inputId in state.inputs) {\n//         if (inputId === action.inputId) {\n//           formIsValid = formIsValid && action.isValid;\n//         } else {\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\n//         }\n//       }\n//       return {\n//         ...state,\n//         inputs: {\n//           ...state.inputs,\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\n//         },\n//         isValid: formIsValid\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nconst NewPlace = () => {\n  // const [formState, dispatch] = useReducer(formReducer, {\n  //   inputs: {\n  //     title: {\n  //       value: '',\n  //       isValid: false\n  //     },\n  //     description: {\n  //       value: '',\n  //       isValid: false\n  //     }\n  //   },\n  //   isValid: false\n  // });\n\n  // const inputHandler = useCallback((id, value, isValid) => {\n  //   dispatch({\n  //     type: 'INPUT_CHANGE',\n  //     value: value,\n  //     isValid: isValid,\n  //     inputId: id\n  //   });\n  // }, []);\n  // const placeSubmitHandler = event => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n  return (\n    <form className=\"place-form\" /*onSubmit={placeSubmitHandler}*/>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        // onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        // onInput={inputHandler}\n      />\n       <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_EMAIL()]}\n        errorText=\"Please enter a valid address.\"\n        // onInput={inputHandler}\n        /> \n      <Button type=\"submit\" /*disabled={!formState.isValid}*/>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,eAHF,QAIO,8BAJP;AAKA,OAAO,gBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAM,SAAS,EAAC;IAAa;IAA7B;IAAA,wBACE,QAAC,KAAD;MACE,EAAE,EAAC,OADL;MAEE,OAAO,EAAC,OAFV;MAGE,IAAI,EAAC,MAHP;MAIE,KAAK,EAAC,OAJR;MAKE,UAAU,EAAE,CAACH,iBAAiB,EAAlB,CALd;MAME,SAAS,EAAC,6BANZ,CAOE;;IAPF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,KAAD;MACE,EAAE,EAAC,aADL;MAEE,OAAO,EAAC,UAFV;MAGE,KAAK,EAAC,aAHR;MAIE,UAAU,EAAE,CAACC,mBAAmB,CAAC,CAAD,CAApB,CAJd;MAKE,SAAS,EAAC,2DALZ,CAME;;IANF;MAAA;MAAA;MAAA;IAAA,QAVF,eAkBG,QAAC,KAAD;MACC,EAAE,EAAC,SADJ;MAEC,OAAO,EAAC,OAFT;MAGC,KAAK,EAAC,SAHP;MAIC,UAAU,EAAE,CAACC,eAAe,EAAhB,CAJb;MAKC,SAAS,EAAC,+BALX,CAMC;;IAND;MAAA;MAAA;MAAA;IAAA,QAlBH,eA0BE,QAAC,MAAD;MAAQ,IAAI,EAAC;MAAS;MAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CA3DD;;KAAMC,Q;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}