{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const {\n    error,\n    isLoading,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUsers, setloadedUsers] = useState();\n  useEffect(() => {\n    const retreiveData = async () => {\n      const responseData = await sendRequest('http://localhost:5000/api/users');\n      setloadedUsers(responseData);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 31\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"WN/N/nac4iKxYI7h0Rf1dF1rmoI=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","useHttpClient","UsersList","LoadingSpinner","ErrorModal","Users","error","isLoading","sendRequest","clearError","loadedUsers","setloadedUsers","retreiveData","responseData"],"sources":["/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport useHttpClient from '../../shared/hooks/http-hook';\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst Users = () => {\n    const { error, isLoading, sendRequest, clearError } = useHttpClient();\n    const [loadedUsers, setloadedUsers] = useState();\n\n    useEffect(() => {\n        const retreiveData = async () => {\n            const responseData = await sendRequest('http://localhost:5000/api/users');\n            setloadedUsers(responseData);\n        }}, [])\n\n        return (\n            <>\n                <ErrorModal error={error} onClear={clearError} />\n                {isLoading && <LoadingSpinner asOverlay />}\n                {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n            </>\n        )\n    }\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM;IAAEC,KAAF;IAASC,SAAT;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDR,aAAa,EAAnE;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAG,YAAY;MAC7B,MAAMC,YAAY,GAAG,MAAML,WAAW,CAAC,iCAAD,CAAtC;MACAG,cAAc,CAACE,YAAD,CAAd;IACH,CAHD;EAGE,CAJG,EAID,EAJC,CAAT;EAMI,oBACI;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAEP,KAAnB;MAA0B,OAAO,EAAEG;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKF,SAAS,iBAAI,QAAC,cAAD;MAAgB,SAAS;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFlB,EAGK,CAACA,SAAD,IAAcG,WAAd,iBAA6B,QAAC,SAAD;MAAW,KAAK,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAHlC;EAAA,gBADJ;AAOH,CAjBL;;GAAML,K;UACoDJ,a;;;KADpDI,K;AAmBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}