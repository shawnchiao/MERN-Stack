{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/Desktop/Web development/reactNew/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isTouched: false,\n    isValid: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 55\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"1UoiO3+9R/x+wPq1n8NuEJGjOzo=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"sources":["/Users/shawn/Desktop/Web development/reactNew/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isTouched: false,\n    isValid: false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,QAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELG,KAAK,EAAEF,MAAM,CAACG,GAFT;QAGLC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;MAHZ,CAAP;;IAKF,KAAK,OAAL;MAAc;QACZ,OAAO,EACL,GAAGN,KADE;UAELO,SAAS,EAAE;QAFN,CAAP;MAID;;IACD;MACE,OAAOP,KAAP;EAdJ;AAgBD,CAjBD;;AAmBA,MAAMQ,KAAK,GAAGC,KAAK,IAAI;EAAA;;EACrB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBf,UAAU,CAACG,YAAD,EAAe;IACtDI,KAAK,EAAE,EAD+C;IAEtDI,SAAS,EAAE,KAF2C;IAGtDF,OAAO,EAAE;EAH6C,CAAf,CAAzC;EAMA,MAAM;IAAEO,EAAF;IAAMC;EAAN,IAAkBJ,KAAxB;EACA,MAAM;IAAEN,KAAF;IAASE;EAAT,IAAqBK,UAA3B;EAEAb,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACD,EAAD,EAAKT,KAAL,EAAYE,OAAZ,CAAP;EACD,CAFQ,EAEN,CAACO,EAAD,EAAKT,KAAL,EAAYE,OAAZ,EAAqBQ,OAArB,CAFM,CAAT;;EAIA,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC7BJ,QAAQ,CAAC;MACPT,IAAI,EAAE,QADC;MAEPE,GAAG,EAAEW,KAAK,CAACC,MAAN,CAAab,KAFX;MAGPG,UAAU,EAAEG,KAAK,CAACH;IAHX,CAAD,CAAR;EAKD,CAND;;EAQA,MAAMW,YAAY,GAAG,MAAM;IACzBN,QAAQ,CAAC;MACPT,IAAI,EAAE;IADC,CAAD,CAAR;EAGD,CAJD;;EAMA,MAAMgB,OAAO,GACXT,KAAK,CAACS,OAAN,KAAkB,OAAlB,gBACE;IACE,EAAE,EAAET,KAAK,CAACG,EADZ;IAEE,IAAI,EAAEH,KAAK,CAACP,IAFd;IAGE,WAAW,EAAEO,KAAK,CAACU,WAHrB;IAIE,QAAQ,EAAEL,aAJZ;IAKE,MAAM,EAAEG,YALV;IAME,KAAK,EAAEP,UAAU,CAACP;EANpB;IAAA;IAAA;IAAA;EAAA,QADF,gBAUE;IACE,EAAE,EAAEM,KAAK,CAACG,EADZ;IAEE,IAAI,EAAEH,KAAK,CAACW,IAAN,IAAc,CAFtB;IAGE,QAAQ,EAAEN,aAHZ;IAIE,MAAM,EAAEG,YAJV;IAKE,KAAK,EAAEP,UAAU,CAACP;EALpB;IAAA;IAAA;IAAA;EAAA,QAXJ;EAoBA,oBACE;IACE,SAAS,EAAG,gBAAe,CAACO,UAAU,CAACL,OAAZ,IAAuBK,UAAU,CAACH,SAAlC,IACzB,uBAAwB,EAF5B;IAAA,wBAIE;MAAO,OAAO,EAAEE,KAAK,CAACG,EAAtB;MAAA,UAA2BH,KAAK,CAACY;IAAjC;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGH,OALH,EAMG,CAACR,UAAU,CAACL,OAAZ,IAAuBK,UAAU,CAACH,SAAlC,iBAA+C;MAAA,UAAIE,KAAK,CAACa;IAAV;MAAA;MAAA;MAAA;IAAA,QANlD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA1DD;;GAAMd,K;;KAAAA,K;AA4DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}