[{"/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/NewPlace.js":"1","/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/components/FormElements/ImageUpload.js":"2","/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js":"3","/Users/shawn/Desktop/Web development/reactNew/frontend/src/App.js":"4","/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/components/PlaceItem.js":"5","/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UpdatePlace.js":"6","/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/context/auth-context.js":"7","/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/components/Navigation/NavLinks.js":"8","/Users/shawn/Desktop/Web development/reactNew/frontend/src/index.js":"9","/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/hooks/auth-hook.js":"10"},{"size":3143,"mtime":1661868811864,"results":"11","hashOfConfig":"12"},{"size":2172,"mtime":1661859574546,"results":"13","hashOfConfig":"12"},{"size":4712,"mtime":1661857750619,"results":"14","hashOfConfig":"12"},{"size":1648,"mtime":1663393988214,"results":"15","hashOfConfig":"12"},{"size":3460,"mtime":1661869598067,"results":"16","hashOfConfig":"12"},{"size":3707,"mtime":1661869866136,"results":"17","hashOfConfig":"12"},{"size":178,"mtime":1661928193965,"results":"18","hashOfConfig":"12"},{"size":1019,"mtime":1663165562626,"results":"19","hashOfConfig":"12"},{"size":211,"mtime":1663165272233,"results":"20","hashOfConfig":"12"},{"size":1623,"mtime":1663393990964,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"ra4wwd",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/NewPlace.js",[],[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/components/FormElements/ImageUpload.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/user/pages/Auth.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/App.js",["56"],[],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"../src/shared/components/Navigation/MainNavigation\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nfunction App() {\n  const { token, userId, tokenExpirationState, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<Users />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/places/new\" element={<NewPlace />} />\n        <Route path=\"/places/:placeId\" element={<UpdatePlace />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    );\n  } else {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<Users />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/auth\" element={<Auth />} />\n        <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\n      </Routes>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/components/PlaceItem.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/places/pages/UpdatePlace.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/context/auth-context.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/components/Navigation/NavLinks.js",["57"],[],"import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../FormElements/Button';\n\n\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const navigate = useNavigate();\n  const auth = useContext(AuthContext);\n\n  return <ul className=\"nav-links\">\n    <li>\n      <NavLink end to=\"/\" >ALL USERS</NavLink>\n    </li>\n    {auth.isLoggedIn && (\n      <li>\n        <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n      </li>\n    )}\n    {auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n      </li>\n    )}\n    {!auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n      </li>\n    )}\n    {auth.isLoggedIn && (\n      <li>\n        <button onClick={()=> {\n          auth.logout();\n          navigate('/auth');\n        }}>LOGOUT</button>\n      </li>\n    )}\n\n\n  </ul>\n};\n\nexport default NavLinks;","/Users/shawn/Desktop/Web development/reactNew/frontend/src/index.js",[],[],"/Users/shawn/Desktop/Web development/reactNew/frontend/src/shared/hooks/auth-hook.js",["58"],[],"import { useEffect, useState, useLayoutEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [tokenExpirationState, setTokenExpirationState] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationState(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    console.log(\"why\");\n    setToken(null);\n    setTokenExpirationState(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationState) {\n      const remainingTime =\n        tokenExpirationState.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout]);\n\n  useLayoutEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, userId, tokenExpirationState, login, logout };\n};\n",{"ruleId":"59","severity":1,"message":"60","line":19,"column":26,"nodeType":"61","messageId":"62","endLine":19,"endColumn":46},{"ruleId":"59","severity":1,"message":"63","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":42,"column":6,"nodeType":"66","endLine":42,"endColumn":21,"suggestions":"67"},"no-unused-vars","'tokenExpirationState' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenExpirationState'. Either include it or remove the dependency array.","ArrayExpression",["68"],{"desc":"69","fix":"70"},"Update the dependencies array to be: [token, logout, tokenExpirationState]",{"range":"71","text":"72"},[1190,1205],"[token, logout, tokenExpirationState]"]